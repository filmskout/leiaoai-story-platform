import React, { useEffect, useState } from 'react';
import { useTranslation } from 'react-i18next';
import { useSearchParams, useNavigate, Link } from 'react-router-dom';
import { AIInvestmentChat } from '@/components/ai/AIInvestmentChat';
import { Button } from '@/components/ui/button';
import { ArrowLeft, Home, Bot, ArrowRight, Filter, Zap, TrendingUp, Globe, Target, Handshake, BarChart3, ClipboardCheck, Calculator, Rocket, Search, Shield, FileSearch, LogOut } from 'lucide-react';
import { motion } from 'framer-motion';
import { useAI } from '@/contexts/AIContext';
import { cn } from '@/lib/utils';

export default function AIChat() {
  const { t } = useTranslation();
  const navigate = useNavigate();
  const [searchParams] = useSearchParams();
  const questionParam = searchParams.get('question');
  const initialCategory = searchParams.get('category');
  const { modelConfigs } = useAI();
  
  // 选中的专业领域
  const [selectedExpertise, setSelectedExpertise] = useState<string | null>(initialCategory);
  
  // 专业领域数据
  const expertiseAreas = [
    { id: 'macroeconomic', name: t('ai_chat.expertise_categories.macroeconomic'), icon: <TrendingUp size={16} className="text-primary-500" /> },
    { id: 'investment_environment', name: t('ai_chat.expertise_categories.investment_environment'), icon: <Globe size={16} className="text-primary-500" /> },
    { id: 'cvc_investment', name: t('ai_chat.expertise_categories.cvc_investment'), icon: <Target size={16} className="text-primary-500" /> },
    { id: 'ma_strategy', name: t('ai_chat.expertise_categories.ma_strategy'), icon: <Handshake size={16} className="text-primary-500" /> },
    { id: 'ipo_listing', name: t('ai_chat.expertise_categories.ipo_listing'), icon: <BarChart3 size={16} className="text-primary-500" /> },
    { id: 'listing_preparation', name: t('ai_chat.expertise_categories.listing_preparation'), icon: <ClipboardCheck size={16} className="text-primary-500" /> },
    { id: 'valuation', name: t('ai_chat.expertise_categories.valuation'), icon: <Calculator size={16} className="text-primary-500" /> },
    { id: 'startup_financing', name: t('ai_chat.expertise_categories.startup_financing'), icon: <Rocket size={16} className="text-primary-500" /> },
    { id: 'industry_research', name: t('ai_chat.expertise_categories.industry_research'), icon: <Search size={16} className="text-primary-500" /> },
    { id: 'risk_management', name: t('ai_chat.expertise_categories.risk_management'), icon: <Shield size={16} className="text-primary-500" /> },
    { id: 'due_diligence', name: t('ai_chat.expertise_categories.due_diligence'), icon: <FileSearch size={16} className="text-primary-500" /> },
    { id: 'exit_strategy', name: t('ai_chat.expertise_categories.exit_strategy'), icon: <LogOut size={16} className="text-primary-500" /> },
  ];

  // 每个专业领域的预设问题
  const getPresetQuestions = (category: string): string[] => {
    const questions = t(`ai_chat.expertise_questions.${category}`, { returnObjects: true });
    return Array.isArray(questions) ? questions : [];
  };

  const handleGoBack = () => {
    navigate('/');
  };

  // 选择专业领域
  const handleSelectExpertise = (expertiseId: string) => {
    setSelectedExpertise(expertiseId);
  };

  // 为选定领域获取问题
  const getQuestionsForSelectedExpertise = () => {
    if (!selectedExpertise) return [];
    return getPresetQuestions(selectedExpertise);
  };

  return (
    <>
      <motion.div 
        initial={{ opacity: 0 }}
        animate={{ opacity: 1 }}
        transition={{ duration: 0.5 }}
        className="min-h-screen bg-background"
      >
        <div className="container-custom py-8">
          <div className="max-w-6xl mx-auto">
            {/* 头部区域与返回按钮 */}
            <div className="mb-8">
              {/* 返回按钮 */}
              <div className="flex items-center justify-between mb-6">
                <Button 
                  variant="outline" 
                  onClick={handleGoBack}
                  className="flex items-center gap-2 hover:bg-primary-50 dark:hover:bg-primary-900/20 transition-colors"
                >
                  <ArrowLeft size={18} />
                  <span className="hidden sm:inline">{t('back')}</span>
                  <Home size={16} className="sm:hidden" />
                </Button>
                
                <div className="flex items-center gap-3">
                  <div className="flex items-center gap-1 text-sm text-foreground-muted">
                    <Bot size={16} className="text-primary-500" />
                    {modelConfigs?.chat.available.find(m => m.id === 'deepseek')?.name || 'DeepSeek'}
                  </div>
                </div>
              </div>
              
              {/* 标题区域 */}
              <div className="text-center mb-8">
                <h1 className="text-4xl font-bold text-foreground mb-4">
                  {t('ai_chat.title')}
                </h1>
                <p className="text-lg text-foreground-secondary max-w-2xl mx-auto">
                  {t('ai_chat.subtitle')}
                </p>
              </div>
              
              {/* 专业领域选择区域 */}
              <div className="mb-8">
                <div className="flex items-center justify-between mb-4">
                  <h2 className="text-xl font-semibold text-foreground flex items-center gap-2">
                    <Zap size={20} className="text-primary-500" />
                    {t('ai_chat.expertise_navigation')}
                  </h2>
                  <Button variant="ghost" size="sm" className="text-foreground-muted">
                    <Filter size={16} className="mr-2" />
                    {t('filter')}
                  </Button>
                </div>
                
                <div className="grid grid-cols-2 sm:grid-cols-3 md:grid-cols-4 lg:grid-cols-6 gap-3">
                  {expertiseAreas.map(area => (
                    <button
                      key={area.id}
                      onClick={() => handleSelectExpertise(area.id)}
                      className={cn(
                        'p-3 text-sm rounded-lg text-left transition-all duration-200 border',
                        selectedExpertise === area.id
                          ? 'bg-primary-50 dark:bg-primary-900/20 border-primary-300 dark:border-primary-700'
                          : 'bg-background-secondary hover:bg-primary-50 dark:hover:bg-primary-900/20 border-border'
                      )}
                    >
                      <div className="flex flex-col gap-2">
                        <div className="flex items-center gap-2">
                          {area.icon}
                          <span className="font-medium text-foreground">{area.name}</span>
                        </div>
                      </div>
                    </button>
                  ))}
                </div>
              </div>
              
              {/* 预设问题展示区 */}
              {selectedExpertise && (
                <div className="mb-8">
                  <div className="bg-background-secondary rounded-lg p-4">
                    <h3 className="text-md font-medium text-foreground mb-3 flex items-center gap-2">
                      <Bot size={16} className="text-primary-500" />
                      {t('ai_chat.recommended_questions')}
                    </h3>
                    <div className="grid gap-2">
                      {getQuestionsForSelectedExpertise().map((question, index) => (
                        <Link 
                          key={index}
                          to={`/ai-chat?question=${encodeURIComponent(question)}`}
                          className="p-3 bg-background border border-border hover:border-primary-300 dark:hover:border-primary-700 rounded-lg transition-all duration-200 flex items-center justify-between hover:shadow-sm"
                        >
                          <span className="text-foreground">{question}</span>
                          <ArrowRight size={14} className="text-primary-500" />
                        </Link>
                      ))}
                    </div>
                  </div>
                </div>
              )}
            </div>
            
            {/* 主要聊天区域 */}
            <AIInvestmentChat 
              className="h-[calc(100vh-540px)] min-h-[500px]" 
              initialQuestion={questionParam || undefined}
            />
          </div>
        </div>
      </motion.div>
    </>
  );
}