import React, { useState, useRef, KeyboardEvent, useEffect } from 'react';
import { useNavigate, Link } from 'react-router-dom';
import { useTranslation } from 'react-i18next';
import { useAI } from '@/contexts/AIContext';
import { Button } from '@/components/ui/button';
import { Textarea } from '@/components/ui/textarea';
import { Bot, ArrowRight, Sparkles, Send, Zap, Bot as BotIcon, Settings, Check } from 'lucide-react';
import { cn } from '@/lib/utils';
import { motion, AnimatePresence } from 'framer-motion';
import LoadingCover from '@/components/LoadingCover';

interface QuickAIChatInputProps {
  className?: string;
  onSubmit?: (message: string) => void;
}

export function QuickAIChatInput({ className, onSubmit }: QuickAIChatInputProps) {
  const { t } = useTranslation();
  const { selectedChatModel, modelConfigs, setSelectedChatModel } = useAI();
  const [inputMessage, setInputMessage] = useState('');
  const [isFocused, setIsFocused] = useState(false);
  const [isLoading, setIsLoading] = useState(false);
  const [showModelSelector, setShowModelSelector] = useState(false);
  const [response, setResponse] = useState<string | null>(null);
  const textareaRef = useRef<HTMLTextAreaElement>(null);
  const modelSelectorRef = useRef<HTMLDivElement>(null);
  const navigate = useNavigate();

  // 点击外部关闭模型选择器
  useEffect(() => {
    const handleClickOutside = (event: MouseEvent) => {
      if (modelSelectorRef.current && !modelSelectorRef.current.contains(event.target as Node)) {
        setShowModelSelector(false);
      }
    };

    document.addEventListener('mousedown', handleClickOutside);
    return () => document.removeEventListener('mousedown', handleClickOutside);
  }, []);

  // 模拟AI响应的欢迎消息
  useEffect(() => {
    setResponse("Hello! I am LeiaoAI Investment Expert, specializing in professional investment consulting services.");
  }, []);

  // 自动调整文本域高度
  const adjustTextareaHeight = () => {
    if (textareaRef.current) {
      textareaRef.current.style.height = 'auto';
      textareaRef.current.style.height = `${Math.min(textareaRef.current.scrollHeight, 120)}px`;
    }
  };

  const handleInputChange = (e: React.ChangeEvent<HTMLTextAreaElement>) => {
    setInputMessage(e.target.value);
    adjustTextareaHeight();
  };

  const handleSubmit = () => {
    if (inputMessage.trim() && !isLoading) {
      setIsLoading(true);

      // 保存当前输入
      const currentMessage = inputMessage;
      
      // 清空输入框
      setInputMessage('');
      
      if (onSubmit) {
        // 如果提供了onSubmit回调，使用它并传递当前选择的模型
        onSubmit(currentMessage);
        // onSubmit会处理加载状态，所以这里不重置setIsLoading(false)
      } else {
        // 设置响应为空，准备接收新回答
        setResponse(null);
        
        // 模拟AI响应
        setTimeout(() => {
          // 根据不同模型生成不同响应
          let simulatedResponse;
          
          if (selectedChatModel === 'deepseek') {
            simulatedResponse = "根据当前经济趋势，我建议关注ESG投资、人工智能和绿色能源等增长领域。针对新兴市场，建议采取多元化投资策略，并保持足够流动性。";
          } else if (selectedChatModel === 'openai') {
            simulatedResponse = "在考虑投资方向时，建议关注数字转型、野生生物大模型和流程自动化等方向。这些领域在未来五年有望实现快速增长，并且已经开始出现潜力独角兽公司。";
          } else if (selectedChatModel === 'qwen') {
            simulatedResponse = "就当前投资环境而言，建议采用“分层配置”策略，即基础层配置低波动高收益产品，机会层关注人工智能、生物技术和清洁能源等领域的创新公司，并留出防御性现金储备。";
          } else {
            simulatedResponse = "根据当前市场分析，投资策略应当多元化，包括传统资产与新兴资产的合理配置。我建议关注ESG投资、人工智能和绿色能源等增长领域。对于具体行业分析，我可以提供更详细的投资建议。";
          }
          
          setResponse(simulatedResponse);
          setIsLoading(false);
        }, 2300); // 模拟2.3秒的平均响应时间
      }
    }
  };

  const handleKeyDown = (e: KeyboardEvent<HTMLTextAreaElement>) => {
    if (e.key === 'Enter' && !e.shiftKey) {
      e.preventDefault();
      handleSubmit();
    }
  };

  // 示例问题列表
  const sampleQuestions = [
    '2025年中国科创板上市企业估值趋势如何？',
    '初创企业如何优化A轮融资策略？',
    '美国和中国VC投资环境有什么区别？'
  ];

  return (
    <motion.div 
      initial={{ opacity: 0, y: 10 }}
      animate={{ opacity: 1, y: 0 }}
      transition={{ duration: 0.5 }}
      className={cn(
        'bg-card border rounded-xl p-4 shadow-sm transition-all duration-300',
        isFocused ? 'border-primary-300 dark:border-primary-700 shadow-md' : 'border-border',
        className
      )}
    >
      <div className="flex flex-col gap-3">
        {/* 头部 - 改进标题和模型选择器 */}
        <div className="flex items-center justify-between">
          <div className="flex items-center gap-2">
            <div className="w-8 h-8 bg-primary-100 dark:bg-primary-900/50 rounded-full flex items-center justify-center">
              <Bot size={16} className="text-primary-600" />
            </div>
            <h3 className="text-md font-medium text-foreground">快速AI投融资咨询</h3>
          </div>
          
          {/* 模型选择器 */}
          <div className="relative" ref={modelSelectorRef}>
            <Button
              variant="ghost"
              size="sm"
              onClick={() => setShowModelSelector(!showModelSelector)}
              className="h-8 text-sm text-foreground-muted hover:text-foreground flex items-center gap-1 px-2"
            >
              <Settings size={12} className="text-primary-500" />
              <span>Auto Select</span>
            </Button>

            <AnimatePresence>
              {showModelSelector && (
                <motion.div
                  initial={{ opacity: 0, scale: 0.95, y: 5 }}
                  animate={{ opacity: 1, scale: 1, y: 0 }}
                  exit={{ opacity: 0, scale: 0.95, y: 5 }}
                  transition={{ duration: 0.15 }}
                  className="absolute right-0 top-full mt-1 w-48 bg-card rounded-lg shadow-lg border border-border z-50 overflow-hidden"
                >
                  <div className="p-2">
                    {modelConfigs?.chat.available.map((model) => (
                      <button
                        key={model.id}
                        onClick={() => {
                          setSelectedChatModel(model.id);
                          setShowModelSelector(false);
                        }}
                        className={cn(
                          'w-full text-left p-2 rounded-md text-sm flex items-center justify-between transition-colors',
                          selectedChatModel === model.id
                            ? 'bg-primary-50 dark:bg-primary-900/20 text-primary-600 dark:text-primary-400'
                            : 'hover:bg-neutral-50 dark:hover:bg-neutral-700 text-foreground'
                        )}
                      >
                        <div className="flex items-center gap-2">
                          {model.id === 'deepseek' ? (
                            <svg width="16" height="16" viewBox="0 0 16 16" fill="none">
                              <path d="M8 15.5C12.1421 15.5 15.5 12.1421 15.5 8C15.5 3.85786 12.1421 0.5 8 0.5C3.85786 0.5 0.5 3.85786 0.5 8C0.5 12.1421 3.85786 15.5 8 15.5Z" fill="#0066FF" fillOpacity="0.1" stroke="#0066FF"/>
                              <path d="M8.51578 4.03395V7.52791L11.8396 6.03395L8.51578 4.03395Z" fill="#0066FF"/>
                              <path d="M8.51578 7.52791V12.0279L11.8396 9.00001L8.51578 7.52791Z" fill="#0066FF"/>
                              <path d="M8.51578 7.52791L5.19199 9.00001L8.51578 12.0279V7.52791Z" fill="#0066FF"/>
                              <path d="M8.51578 7.52791V4.03395L5.19199 6.03395L8.51578 7.52791Z" fill="#0066FF"/>
                            </svg>
                          ) : model.id === 'openai' ? (
                            <svg width="16" height="16" viewBox="0 0 16 16" fill="none">
                              <path fillRule="evenodd" clipRule="evenodd" d="M8.68152 1.04948C7.98221 0.734375 7.17731 0.734375 6.47801 1.04948L3.09186 2.57031C2.39256 2.88542 1.90738 3.53385 1.87598 4.28646L1.71153 9.45312C1.6694 10.2057 2.15458 10.901 2.87944 11.2161L6.26559 12.737C6.9649 13.0521 7.7698 13.0521 8.4691 12.737L11.8553 11.2161C12.5546 10.901 13.0397 10.2526 13.0084 9.5L12.844 4.33333C12.8126 3.58073 12.3274 2.93229 11.6281 2.61719L8.68152 1.04948ZM7.40028 3.58073C7.52637 3.51562 7.68356 3.51562 7.80965 3.58073C7.93575 3.64583 8.00293 3.77865 8.00293 3.91146V4.25781C8.31573 4.32292 8.59714 4.47917 8.81514 4.69792C9.03315 4.91667 9.18663 5.19271 9.24822 5.5L9.31072 5.85156C9.34211 6 9.31072 6.14583 9.21774 6.25521C9.12475 6.36458 8.99866 6.42969 8.87256 6.42969H8.7789C8.6528 6.42969 8.5267 6.39323 8.43372 6.32812C8.34073 6.26302 8.27894 6.15365 8.27894 6.04427C8.27894 5.91146 8.24755 5.77865 8.18596 5.66927C8.12437 5.5599 8.03138 5.48177 7.9384 5.41667C7.84541 5.35156 7.73683 5.31511 7.62633 5.31511C7.51584 5.31511 7.40534 5.31511 7.29966 5.35156C7.19398 5.38802 7.10099 5.46615 7.0394 5.57552C6.97781 5.6849 6.94642 5.81771 6.94642 5.95052C6.94642 6.11979 7.0394 6.28906 7.19398 6.39844C7.34856 6.50781 7.52776 6.58594 7.72456 6.65104C7.92136 6.71615 8.11816 6.78125 8.31496 6.86458C8.51177 6.94792 8.68775 7.08073 8.84234 7.23958C8.99692 7.39844 9.0899 7.59375 9.0899 7.82552C9.0899 8.05729 9.02831 8.27604 8.90221 8.45833C8.77612 8.64062 8.59991 8.78646 8.39172 8.88281C8.18352 8.97917 7.95012 9.02865 7.71894 9.01562V9.33073C7.71894 9.46354 7.65176 9.59635 7.52566 9.66146C7.39957 9.72656 7.24238 9.72656 7.11628 9.66146C6.99019 9.59635 6.923 9.46354 6.923 9.33073V9.01562C6.64159 8.96615 6.38157 8.83854 6.17915 8.64062C5.97673 8.44271 5.84504 8.17969 5.81365 7.89062L5.77796 7.52083C5.77796 7.375 5.80936 7.22917 5.90234 7.11979C5.99533 7.01042 6.12142 6.94531 6.24752 6.94531H6.34051C6.46661 6.94531 6.59271 7.01042 6.65429 7.07552C6.71588 7.14062 6.77747 7.25 6.77747 7.35938C6.77747 7.52865 6.83905 7.6849 6.96515 7.79427C7.09125 7.90365 7.25142 7.95312 7.41161 7.95312C7.57179 7.95312 7.71427 7.90365 7.82476 7.82031C7.93526 7.73698 7.99685 7.60417 7.99685 7.46875C7.99685 7.30729 7.90386 7.16146 7.74928 7.05208C7.59469 6.94271 7.4155 6.85938 7.22429 6.79427C7.03308 6.72917 6.83627 6.65104 6.63947 6.5599C6.44267 6.46875 6.25146 6.3125 6.09688 6.13021C5.9423 5.94792 5.84931 5.71615 5.84931 5.45312C5.84931 5.15104 5.95981 4.88802 6.12559 4.66927C6.29137 4.45052 6.53719 4.30469 6.80421 4.23958V3.91146C6.80421 3.77865 6.87139 3.64583 6.99749 3.58073C7.12359 3.51562 7.28077 3.51562 7.40687 3.58073H7.40028Z" fill="#20A17F"/>
                              <path fillRule="evenodd" clipRule="evenodd" d="M4.28708 12.8073C4.48388 12.7422 4.65546 12.6016 4.74845 12.4193C4.84143 12.237 4.84143 12.0234 4.77984 11.8151L4.05498 9.23438C4.02359 9.13802 3.9306 9.07292 3.83762 9.07292H3.80622C3.69073 9.07292 3.61834 9.17187 3.65463 9.28125L4.37949 11.862C4.41089 11.9583 4.38429 12.0547 4.31709 12.1328C4.25551 12.2109 4.16253 12.2474 4.06954 12.2474C4.00795 12.2474 3.94636 12.2292 3.90016 12.1927L3.86877 12.1745C3.79238 12.1328 3.74559 12.0547 3.74559 11.9583L3.03553 9.375C3.03553 9.33333 2.97394 9.29167 2.93016 9.29167H2.89876C2.82717 9.29167 2.76558 9.35156 2.76558 9.42708L3.49044 12.0078C3.59822 12.362 3.96761 12.5964 4.32874 12.5964C4.30294 12.5964 4.30294 12.5964 4.28708 12.5964C4.28708 12.737 4.28708 12.8073 4.28708 12.8073ZM9.79404 12.3307C9.79404 12.3307 9.72685 12.3307 9.69546 12.2891C9.66407 12.2474 9.65848 12.1953 9.69546 12.1536L10.9995 10.7031C11.0309 10.6615 11.0309 10.6615 11.0309 10.6198C11.0309 10.5781 10.9995 10.5365 10.9681 10.5365L9.72126 9.96094C9.68987 9.94792 9.68428 9.91146 9.68428 9.88802C9.68428 9.86458 9.70008 9.82812 9.72687 9.81511L9.74268 9.8099C9.78486 9.79688 9.82184 9.80469 9.85324 9.83594L11.1573 11.4609C11.1887 11.5026 11.1887 11.5547 11.1573 11.5964L9.88546 12.3307C9.85407 12.3724 9.82268 12.3724 9.79128 12.3724L9.79404 12.3307Z" fill="#20A17F"/>
                            </svg>
                          ) : (
                            <svg width="16" height="16" viewBox="0 0 16 16" fill="none">
                              <path fillRule="evenodd" clipRule="evenodd" d="M8 14.5C11.5899 14.5 14.5 11.5899 14.5 8C14.5 4.41015 11.5899 1.5 8 1.5C4.41015 1.5 1.5 4.41015 1.5 8C1.5 11.5899 4.41015 14.5 8 14.5ZM5.22222 5.40741C5.22222 5.40741 5.91134 7.92593 5.91134 8C5.91134 8.07407 5.22222 10.5926 5.22222 10.5926H6.59259C6.59259 10.5926 7.43024 8.07407 7.43024 8C7.43024 7.92593 6.59259 5.40741 6.59259 5.40741H5.22222ZM9.40741 5.40741C9.40741 5.40741 8.5687 7.92593 8.5687 8C8.5687 8.07407 9.40741 10.5926 9.40741 10.5926H10.7778C10.7778 10.5926 10.0887 8.07407 10.0887 8C10.0887 7.92593 10.7778 5.40741 10.7778 5.40741H9.40741Z" fill="#00964A"/>
                            </svg>
                          )}
                          <span>{model.name}</span>
                        </div>
                        {model.recommended && (
                          <Check size={14} className="text-primary-500" />
                        )}
                      </button>
                    ))}
                  </div>
                </motion.div>
              )}
            </AnimatePresence>
          </div>
        </div>

        {/* AI响应区域 - 改进加载动画 */}
        <div className="h-[170px] overflow-hidden rounded-lg bg-background-secondary flex items-start p-4">
          {isLoading ? (
            <div className="flex items-center justify-center w-full h-full">
              <LoadingCover 
                isAILoading={true} 
                isFullscreen={false} 
                text="正在思考您的问题..."
              />
            </div>
          ) : response ? (
            <div className="flex gap-3 w-full h-full animate-fadeIn">
              <div className="flex-shrink-0 w-8 h-8 rounded-full bg-primary-100 dark:bg-primary-800/50 flex items-center justify-center">
                <BotIcon size={16} className="text-primary-600" />
              </div>
              <div className="flex-1 overflow-y-auto pr-2 text-foreground text-sm">
                {response}
              </div>
            </div>
          ) : (
            <div className="text-center space-y-4 w-full flex flex-col items-center justify-center h-full">
              <div className="w-16 h-16 mx-auto rounded-full bg-primary-100 dark:bg-primary-900/30 flex items-center justify-center">
                <Zap size={24} className="text-primary-500" />
              </div>
              <div>
                <h3 className="text-lg font-medium text-foreground">
                  {t('ai_chat.title')}
                </h3>
                <p className="text-sm text-foreground-muted max-w-xs mx-auto">
                  专业的投融资AI助手，回答您的金融、投资和企业融资问题
                </p>
              </div>
            </div>
          )}
        </div>
        
        {/* 输入区域 */}
        <div className="relative">
          <Textarea
            ref={textareaRef}
            value={inputMessage}
            onChange={(e) => setInputMessage(e.target.value)}
            onKeyDown={handleKeyDown}
            onFocus={() => setIsFocused(true)}
            onBlur={() => setIsFocused(false)}
            placeholder="请输入您的投融资问题..."
            className="resize-none min-h-[60px] pr-12 transition-all duration-200 focus:border-primary-300 focus:ring-primary-300"
            disabled={isLoading}
          />
          <Button
            type="submit"
            size="sm"
            onClick={handleSubmit}
            disabled={!inputMessage.trim() || isLoading}
            className="absolute right-2 top-2 h-8 w-8 p-0"
          >
            {isLoading ? (
              <div className="animate-spin w-4 h-4 border-2 border-primary-200 border-t-primary-600 rounded-full" />
            ) : (
              <Send size={14} />
            )}
          </Button>
        </div>
        
        {/* 示例问题 */}
        <div className="flex flex-wrap gap-2">
          {sampleQuestions.map((question, index) => (
            <button
              key={index}
              onClick={() => {
                setInputMessage(question);
                if (textareaRef.current) {
                  textareaRef.current.focus();
                }
                adjustTextareaHeight();
              }}
              className="inline-flex items-center gap-1 px-3 py-1 text-xs rounded-full bg-background-secondary border border-border hover:border-primary-300 hover:bg-primary-50 dark:hover:bg-primary-900/20 transition-all duration-200"
            >
              <Sparkles size={10} className="text-primary-500" />
              {question}
            </button>
          ))}
        </div>
        
        {/* 底部 */}
        <div className="pt-1 text-center">
          <Link to="/ai-chat">
            <Button variant="ghost" size="sm" className="text-primary-600 hover:text-primary-700 text-xs h-6 px-2">
              View Complete AI Q&A <ArrowRight size={12} className="ml-1" />
            </Button>
          </Link>
        </div>
      </div>
    </motion.div>
  );
}
