import{Z as w}from"./addresses-Cbjra2SQ.js";import{s as c,i as f,C as y,c as i,aB as u}from"./Auth-DAqzl9N_.js";import{readContract as g}from"./read-contract-CPImL6fK.js";import{e as l}from"./to-serializable-transaction-CJPffVs0.js";import"./index-lJi5ZKDq.js";import"./mail-rCMurYez.js";import"./eye-off-_xJlegA0.js";import"./eye-CgMDpV-8.js";import"./circle-alert-DSA0x7c1.js";import"./loader-circle-Cf5iuTbA.js";import"./utils-DDmVK8MX.js";const d=0n;async function x({account:a,serializableTransaction:e,transaction:o,gasless:n}){const r=y({address:n.relayerForwarderAddress,chain:o.chain,client:o.client}),s=await g({contract:r,method:"function getNonce(address,uint256) view returns (uint256)",params:[a.address,d]}),p=Math.floor(Date.now()/1e3)+(n.deadlineSeconds??3600),t={batchId:d,batchNonce:s,data:e.data,deadline:p,from:a.address,to:e.to,token:w,tokenGasPrice:0n,txGas:e.gas};if(!t.to)throw new Error("Cannot send a transaction without a `to` address");if(!t.txGas)throw new Error("Cannot send a transaction without a `gas` value");if(!t.data)throw new Error("Cannot send a transaction without a `data` value");const m=l([{type:"address"},{type:"address"},{type:"address"},{type:"uint256"},{type:"uint256"},{type:"uint256"},{type:"uint256"},{type:"bytes32"}],[i(t.from),i(t.to),i(t.token),t.txGas,t.tokenGasPrice,t.batchId,t.batchNonce,u(t.data)]),h=await a.signMessage({message:m});return[t,h]}async function P(a){const[e,o]=await x(a),n=await fetch("https://api.biconomy.io/api/v2/meta-tx/native",{body:c({apiId:a.gasless.apiId,from:e.from,gasLimit:e.txGas,params:[e,o],to:e.to}),headers:{"Content-Type":"application/json;charset=utf-8","x-api-key":a.gasless.apiKey},method:"POST"});if(!n.ok)throw new Error(`Failed to send transaction: ${await n.text()}`);const r=await n.json(),s=r.txHash;if(f(s))return{chain:a.transaction.chain,client:a.transaction.client,transactionHash:s};throw new Error(`Failed to send transaction: ${c(r)}`)}export{x as prepareBiconomyTransaction,P as relayBiconomyTransaction};
