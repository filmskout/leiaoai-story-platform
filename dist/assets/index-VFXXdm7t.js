const __vite__mapDeps=(i,m=__vite__mapDeps,d=(m.f||(m.f=["assets/in-app-wallet-calls-Dl5w4L9t.js","assets/vendor-thirdweb-B1z45yR6.js","assets/index-BPA60hNy.js","assets/bundler-De8BusCB.js","assets/send-eip712-transaction-D0LhmJhm.js","assets/Auth-D--Fh304.js","assets/vendor-ui-DPGpZYCr.js","assets/vendor-react-CpsyMv2-.js","assets/index-Dy8cuphJ.js","assets/index-DanjOyN6.css","assets/mail-2b8o2FGV.js","assets/eye-off-5dQQKzLU.js","assets/eye-CStPiHBG.js","assets/circle-alert-BjoSExI5.js","assets/loader-circle-C2IDBDno.js"])))=>i.map(i=>d[i]);
import{Y as x,Z as A,_ as b,f,y as P,g as d,N as E,$ as I,a0 as M,w as _,M as U,s as W,a1 as V,P as R}from"./vendor-thirdweb-B1z45yR6.js";import{s as D}from"./types-CY5aNEio.js";import{o as F,e as z,g as G}from"./bundler-De8BusCB.js";const H=x({blockExplorers:[{name:"Etherscan",url:"https://etherscan.io"}],id:1,name:"Ethereum",nativeCurrency:{decimals:18,name:"Ether",symbol:"ETH"}}),N="0x3f707e6b",$=[{type:"tuple[]",name:"calls",components:[{type:"address",name:"target"},{type:"uint256",name:"value"},{type:"bytes",name:"data"}]}],B=[];function k(n){const t=F(async()=>"asyncParams"in n?await n.asyncParams():n);return A({contract:n.contract,method:[N,$,B],params:async()=>[(await t()).calls],value:async()=>{var e;return(e=(await t()).overrides)==null?void 0:e.value},accessList:async()=>{var e;return(e=(await t()).overrides)==null?void 0:e.accessList},gas:async()=>{var e;return(e=(await t()).overrides)==null?void 0:e.gas},gasPrice:async()=>{var e;return(e=(await t()).overrides)==null?void 0:e.gasPrice},maxFeePerGas:async()=>{var e;return(e=(await t()).overrides)==null?void 0:e.maxFeePerGas},maxPriorityFeePerGas:async()=>{var e;return(e=(await t()).overrides)==null?void 0:e.maxPriorityFeePerGas},nonce:async()=>{var e;return(e=(await t()).overrides)==null?void 0:e.nonce},extraGas:async()=>{var e;return(e=(await t()).overrides)==null?void 0:e.extraGas},erc20Value:async()=>{var e;return(e=(await t()).overrides)==null?void 0:e.erc20Value},authorizationList:async()=>{var e;return(e=(await t()).overrides)==null?void 0:e.authorizationList}})}async function j(n){const{client:t,chain:e,bundlerUrl:r}=n,p=r??M(e),o=`delegation-contract:${p}`;return _(async()=>{var y;const i=await U(t)(p,{useAuthToken:!0,body:W({id:1,jsonrpc:"2.0",method:"tw_getDelegationContract",params:[]}),headers:{"Content-Type":"application/json"},method:"POST"});if(!i.ok)throw new Error(`Failed to fetch delegation contract: ${i.status} ${i.statusText}`);const s=await i.json();if(s.error)throw new Error(`Delegation contract RPC error: ${JSON.stringify(s.error)}`);if(!((y=s.result)!=null&&y.delegationContract))throw new Error("Invalid response: missing delegationContract in result");return s.result.delegationContract},{cacheKey:o,cacheTime:24*60*60*1e3})}const q=n=>{const{client:t,adminAccount:e,sponsorGas:r}=n,p=async a=>{var S,w,L;const i=a[0];if(!i)throw new Error("No transactions provided");const s=f(i.chainId),y=P({address:e.address,chain:s,client:t,abi:Q});let u=(S=i.authorizationList)==null?void 0:S[0];const c=await j({client:t,chain:s});if(u&&((w=u.address)==null?void 0:w.toLowerCase())!==c.toLowerCase())throw new Error(`Authorization address does not match expected delegation contract address. Expected ${c} but got ${u.address}`);if(!u&&!await Z(y,c)){let m=i.nonce?BigInt(i.nonce):BigInt(await J({client:t,address:e.address,chain:s}));m+=r?0n:1n;const T=await((L=e.signAuthorization)==null?void 0:L.call(e,{address:d(c),chainId:i.chainId,nonce:m}));if(!T)throw new Error("Failed to sign authorization");u=T}if(r){const l={calls:a.map(g=>({data:g.data??"0x",target:d(g.to??""),value:g.value??0n})),uid:E()},m=await e.signTypedData({domain:{chainId:i.chainId,name:"MinimalAccount",verifyingContract:y.address,version:"1"},message:l,primaryType:"WrappedCalls",types:{Call:[{name:"target",type:"address"},{name:"value",type:"uint256"},{name:"data",type:"bytes"}],WrappedCalls:[{name:"calls",type:"Call[]"},{name:"uid",type:"bytes32"}]}}),T=await z({authorization:u,eoaAddress:d(e.address),options:{chain:f(i.chainId),client:t},signature:m,wrappedCalls:l});return{transactionHash:await K({options:{chain:f(i.chainId),client:t},transactionId:T.transactionId})}}const h=k({calls:a.map(l=>({data:l.data??"0x",target:d(l.to??""),value:l.value??0n})),contract:y,overrides:{authorizationList:u?[u]:void 0,value:a.reduce((l,m)=>l+(m.value??0n),0n)}}),C=await I({from:e.address,transaction:h});return e.sendTransaction(C)},o={address:e.address,sendBatchTransaction:async a=>p(a),sendTransaction:async a=>p([a]),signMessage:({message:a,originalMessage:i,chainId:s})=>e.signMessage({chainId:s,message:a,originalMessage:i}),signTypedData:a=>e.signTypedData(a),sendCalls:async a=>{const{inAppWalletSendCalls:i}=await b(async()=>{const{inAppWalletSendCalls:h}=await import("./in-app-wallet-calls-Dl5w4L9t.js");return{inAppWalletSendCalls:h}},__vite__mapDeps([0,1])),s=a.calls[0];if(!s)throw new Error("No calls to send");const y=s.client,u=s.chain||a.chain,c=await i({account:o,calls:a.calls});return{chain:u,client:y,id:c}},getCallsStatus:async a=>{const{inAppWalletGetCallsStatus:i}=await b(async()=>{const{inAppWalletGetCallsStatus:s}=await import("./in-app-wallet-calls-Dl5w4L9t.js");return{inAppWalletGetCallsStatus:s}},__vite__mapDeps([0,1]));return i(a)},getCapabilities:async a=>({[a.chainId??1]:{atomic:{status:"supported"},paymasterService:{supported:r??!1}}})};return o};async function J(n){const{client:t,address:e,chain:r}=n,p=R({chain:r,client:t});return await b(async()=>{const{eth_getTransactionCount:a}=await import("./vendor-thirdweb-B1z45yR6.js").then(i=>i.aJ);return{eth_getTransactionCount:a}},[]).then(({eth_getTransactionCount:a})=>a(p,{address:d(e),blockTag:"pending"}))}async function Z(n,t){const e=await V(n),r=e.length>0&&e.startsWith("0xef0100"),p=`0x${e.slice(8,48)}`;return r&&p.toLowerCase()===t.toLowerCase()}async function K(n){const t=n.timeoutMs||3e5,e=n.intervalMs||1e3,r=Date.now()+t;for(;Date.now()<r;){const p=await G({options:n.options,transactionId:n.transactionId});if(p.transactionHash)return p.transactionHash;await new Promise(o=>setTimeout(o,e))}throw new Error(`Timeout waiting for transaction to be mined on chain ${n.options.chain.id} with transactionId: ${n.transactionId}`)}const Q=[{type:"receive",stateMutability:"payable"},{type:"function",name:"createSessionWithSig",inputs:[{name:"sessionSpec",type:"tuple",internalType:"struct SessionLib.SessionSpec",components:[{name:"signer",type:"address",internalType:"address"},{name:"isWildcard",type:"bool",internalType:"bool"},{name:"expiresAt",type:"uint256",internalType:"uint256"},{name:"callPolicies",type:"tuple[]",internalType:"struct SessionLib.CallSpec[]",components:[{name:"target",type:"address",internalType:"address"},{name:"selector",type:"bytes4",internalType:"bytes4"},{name:"maxValuePerUse",type:"uint256",internalType:"uint256"},{name:"valueLimit",type:"tuple",internalType:"struct SessionLib.UsageLimit",components:[{name:"limitType",type:"uint8",internalType:"enum SessionLib.LimitType"},{name:"limit",type:"uint256",internalType:"uint256"},{name:"period",type:"uint256",internalType:"uint256"}]},{name:"constraints",type:"tuple[]",internalType:"struct SessionLib.Constraint[]",components:[{name:"condition",type:"uint8",internalType:"enum SessionLib.Condition"},{name:"index",type:"uint64",internalType:"uint64"},{name:"refValue",type:"bytes32",internalType:"bytes32"},{name:"limit",type:"tuple",internalType:"struct SessionLib.UsageLimit",components:[{name:"limitType",type:"uint8",internalType:"enum SessionLib.LimitType"},{name:"limit",type:"uint256",internalType:"uint256"},{name:"period",type:"uint256",internalType:"uint256"}]}]}]},{name:"transferPolicies",type:"tuple[]",internalType:"struct SessionLib.TransferSpec[]",components:[{name:"target",type:"address",internalType:"address"},{name:"maxValuePerUse",type:"uint256",internalType:"uint256"},{name:"valueLimit",type:"tuple",internalType:"struct SessionLib.UsageLimit",components:[{name:"limitType",type:"uint8",internalType:"enum SessionLib.LimitType"},{name:"limit",type:"uint256",internalType:"uint256"},{name:"period",type:"uint256",internalType:"uint256"}]}]},{name:"uid",type:"bytes32",internalType:"bytes32"}]},{name:"signature",type:"bytes",internalType:"bytes"}],outputs:[],stateMutability:"nonpayable"},{type:"function",name:"eip712Domain",inputs:[],outputs:[{name:"fields",type:"bytes1",internalType:"bytes1"},{name:"name",type:"string",internalType:"string"},{name:"version",type:"string",internalType:"string"},{name:"chainId",type:"uint256",internalType:"uint256"},{name:"verifyingContract",type:"address",internalType:"address"},{name:"salt",type:"bytes32",internalType:"bytes32"},{name:"extensions",type:"uint256[]",internalType:"uint256[]"}],stateMutability:"view"},{type:"function",name:"execute",inputs:[{name:"calls",type:"tuple[]",internalType:"struct Call[]",components:[{name:"target",type:"address",internalType:"address"},{name:"value",type:"uint256",internalType:"uint256"},{name:"data",type:"bytes",internalType:"bytes"}]}],outputs:[],stateMutability:"payable"},{type:"function",name:"executeWithSig",inputs:[{name:"wrappedCalls",type:"tuple",internalType:"struct WrappedCalls",components:[{name:"calls",type:"tuple[]",internalType:"struct Call[]",components:[{name:"target",type:"address",internalType:"address"},{name:"value",type:"uint256",internalType:"uint256"},{name:"data",type:"bytes",internalType:"bytes"}]},{name:"uid",type:"bytes32",internalType:"bytes32"}]},{name:"signature",type:"bytes",internalType:"bytes"}],outputs:[],stateMutability:"payable"},{type:"function",name:"getCallPoliciesForSigner",inputs:[{name:"signer",type:"address",internalType:"address"}],outputs:[{name:"",type:"tuple[]",internalType:"struct SessionLib.CallSpec[]",components:[{name:"target",type:"address",internalType:"address"},{name:"selector",type:"bytes4",internalType:"bytes4"},{name:"maxValuePerUse",type:"uint256",internalType:"uint256"},{name:"valueLimit",type:"tuple",internalType:"struct SessionLib.UsageLimit",components:[{name:"limitType",type:"uint8",internalType:"enum SessionLib.LimitType"},{name:"limit",type:"uint256",internalType:"uint256"},{name:"period",type:"uint256",internalType:"uint256"}]},{name:"constraints",type:"tuple[]",internalType:"struct SessionLib.Constraint[]",components:[{name:"condition",type:"uint8",internalType:"enum SessionLib.Condition"},{name:"index",type:"uint64",internalType:"uint64"},{name:"refValue",type:"bytes32",internalType:"bytes32"},{name:"limit",type:"tuple",internalType:"struct SessionLib.UsageLimit",components:[{name:"limitType",type:"uint8",internalType:"enum SessionLib.LimitType"},{name:"limit",type:"uint256",internalType:"uint256"},{name:"period",type:"uint256",internalType:"uint256"}]}]}]}],stateMutability:"view"},{type:"function",name:"getSessionExpirationForSigner",inputs:[{name:"signer",type:"address",internalType:"address"}],outputs:[{name:"",type:"uint256",internalType:"uint256"}],stateMutability:"view"},{type:"function",name:"getSessionStateForSigner",inputs:[{name:"signer",type:"address",internalType:"address"}],outputs:[{name:"",type:"tuple",internalType:"struct SessionLib.SessionState",components:[{name:"transferValue",type:"tuple[]",internalType:"struct SessionLib.LimitState[]",components:[{name:"remaining",type:"uint256",internalType:"uint256"},{name:"target",type:"address",internalType:"address"},{name:"selector",type:"bytes4",internalType:"bytes4"},{name:"index",type:"uint256",internalType:"uint256"}]},{name:"callValue",type:"tuple[]",internalType:"struct SessionLib.LimitState[]",components:[{name:"remaining",type:"uint256",internalType:"uint256"},{name:"target",type:"address",internalType:"address"},{name:"selector",type:"bytes4",internalType:"bytes4"},{name:"index",type:"uint256",internalType:"uint256"}]},{name:"callParams",type:"tuple[]",internalType:"struct SessionLib.LimitState[]",components:[{name:"remaining",type:"uint256",internalType:"uint256"},{name:"target",type:"address",internalType:"address"},{name:"selector",type:"bytes4",internalType:"bytes4"},{name:"index",type:"uint256",internalType:"uint256"}]}]}],stateMutability:"view"},{type:"function",name:"getTransferPoliciesForSigner",inputs:[{name:"signer",type:"address",internalType:"address"}],outputs:[{name:"",type:"tuple[]",internalType:"struct SessionLib.TransferSpec[]",components:[{name:"target",type:"address",internalType:"address"},{name:"maxValuePerUse",type:"uint256",internalType:"uint256"},{name:"valueLimit",type:"tuple",internalType:"struct SessionLib.UsageLimit",components:[{name:"limitType",type:"uint8",internalType:"enum SessionLib.LimitType"},{name:"limit",type:"uint256",internalType:"uint256"},{name:"period",type:"uint256",internalType:"uint256"}]}]}],stateMutability:"view"},{type:"function",name:"isWildcardSigner",inputs:[{name:"signer",type:"address",internalType:"address"}],outputs:[{name:"",type:"bool",internalType:"bool"}],stateMutability:"view"},{type:"function",name:"onERC1155BatchReceived",inputs:[{name:"",type:"address",internalType:"address"},{name:"",type:"address",internalType:"address"},{name:"",type:"uint256[]",internalType:"uint256[]"},{name:"",type:"uint256[]",internalType:"uint256[]"},{name:"",type:"bytes",internalType:"bytes"}],outputs:[{name:"",type:"bytes4",internalType:"bytes4"}],stateMutability:"nonpayable"},{type:"function",name:"onERC1155Received",inputs:[{name:"",type:"address",internalType:"address"},{name:"",type:"address",internalType:"address"},{name:"",type:"uint256",internalType:"uint256"},{name:"",type:"uint256",internalType:"uint256"},{name:"",type:"bytes",internalType:"bytes"}],outputs:[{name:"",type:"bytes4",internalType:"bytes4"}],stateMutability:"nonpayable"},{type:"function",name:"onERC721Received",inputs:[{name:"",type:"address",internalType:"address"},{name:"",type:"address",internalType:"address"},{name:"",type:"uint256",internalType:"uint256"},{name:"",type:"bytes",internalType:"bytes"}],outputs:[{name:"",type:"bytes4",internalType:"bytes4"}],stateMutability:"nonpayable"},{type:"function",name:"supportsInterface",inputs:[{name:"interfaceId",type:"bytes4",internalType:"bytes4"}],outputs:[{name:"",type:"bool",internalType:"bool"}],stateMutability:"view"},{type:"event",name:"Executed",inputs:[{name:"to",type:"address",indexed:!0,internalType:"address"},{name:"value",type:"uint256",indexed:!1,internalType:"uint256"},{name:"data",type:"bytes",indexed:!1,internalType:"bytes"}],anonymous:!1},{type:"event",name:"SessionCreated",inputs:[{name:"signer",type:"address",indexed:!0,internalType:"address"},{name:"sessionSpec",type:"tuple",indexed:!1,internalType:"struct SessionLib.SessionSpec",components:[{name:"signer",type:"address",internalType:"address"},{name:"isWildcard",type:"bool",internalType:"bool"},{name:"expiresAt",type:"uint256",internalType:"uint256"},{name:"callPolicies",type:"tuple[]",internalType:"struct SessionLib.CallSpec[]",components:[{name:"target",type:"address",internalType:"address"},{name:"selector",type:"bytes4",internalType:"bytes4"},{name:"maxValuePerUse",type:"uint256",internalType:"uint256"},{name:"valueLimit",type:"tuple",internalType:"struct SessionLib.UsageLimit",components:[{name:"limitType",type:"uint8",internalType:"enum SessionLib.LimitType"},{name:"limit",type:"uint256",internalType:"uint256"},{name:"period",type:"uint256",internalType:"uint256"}]},{name:"constraints",type:"tuple[]",internalType:"struct SessionLib.Constraint[]",components:[{name:"condition",type:"uint8",internalType:"enum SessionLib.Condition"},{name:"index",type:"uint64",internalType:"uint64"},{name:"refValue",type:"bytes32",internalType:"bytes32"},{name:"limit",type:"tuple",internalType:"struct SessionLib.UsageLimit",components:[{name:"limitType",type:"uint8",internalType:"enum SessionLib.LimitType"},{name:"limit",type:"uint256",internalType:"uint256"},{name:"period",type:"uint256",internalType:"uint256"}]}]}]},{name:"transferPolicies",type:"tuple[]",internalType:"struct SessionLib.TransferSpec[]",components:[{name:"target",type:"address",internalType:"address"},{name:"maxValuePerUse",type:"uint256",internalType:"uint256"},{name:"valueLimit",type:"tuple",internalType:"struct SessionLib.UsageLimit",components:[{name:"limitType",type:"uint8",internalType:"enum SessionLib.LimitType"},{name:"limit",type:"uint256",internalType:"uint256"},{name:"period",type:"uint256",internalType:"uint256"}]}]},{name:"uid",type:"bytes32",internalType:"bytes32"}]}],anonymous:!1},{type:"event",name:"ValueReceived",inputs:[{name:"from",type:"address",indexed:!0,internalType:"address"},{name:"value",type:"uint256",indexed:!1,internalType:"uint256"}],anonymous:!1},{type:"error",name:"AllowanceExceeded",inputs:[{name:"allowanceUsage",type:"uint256",internalType:"uint256"},{name:"limit",type:"uint256",internalType:"uint256"},{name:"period",type:"uint64",internalType:"uint64"}]},{type:"error",name:"CallPolicyViolated",inputs:[{name:"target",type:"address",internalType:"address"},{name:"selector",type:"bytes4",internalType:"bytes4"}]},{type:"error",name:"CallReverted",inputs:[]},{type:"error",name:"ConditionFailed",inputs:[{name:"param",type:"bytes32",internalType:"bytes32"},{name:"refValue",type:"bytes32",internalType:"bytes32"},{name:"condition",type:"uint8",internalType:"uint8"}]},{type:"error",name:"InvalidDataLength",inputs:[{name:"actualLength",type:"uint256",internalType:"uint256"},{name:"expectedLength",type:"uint256",internalType:"uint256"}]},{type:"error",name:"InvalidSignature",inputs:[{name:"msgSender",type:"address",internalType:"address"},{name:"thisAddress",type:"address",internalType:"address"}]},{type:"error",name:"LifetimeUsageExceeded",inputs:[{name:"lifetimeUsage",type:"uint256",internalType:"uint256"},{name:"limit",type:"uint256",internalType:"uint256"}]},{type:"error",name:"MaxValueExceeded",inputs:[{name:"value",type:"uint256",internalType:"uint256"},{name:"maxValuePerUse",type:"uint256",internalType:"uint256"}]},{type:"error",name:"NoCallsToExecute",inputs:[]},{type:"error",name:"SessionExpired",inputs:[]},{type:"error",name:"SessionExpiresTooSoon",inputs:[]},{type:"error",name:"SessionZeroSigner",inputs:[]},{type:"error",name:"TransferPolicyViolated",inputs:[{name:"target",type:"address",internalType:"address"}]},{type:"error",name:"UIDAlreadyProcessed",inputs:[]}];async function ae(n,t,e){var o,a,i,s;if(((o=t==null?void 0:t.auth)==null?void 0:o.mode)!=="popup"&&((a=t==null?void 0:t.auth)==null?void 0:a.mode)!==void 0&&e.authenticateWithRedirect){const y=n.strategy;D.includes(y)&&await e.authenticateWithRedirect(y,(i=t==null?void 0:t.auth)==null?void 0:i.mode,(s=t==null?void 0:t.auth)==null?void 0:s.redirectUrl)}const p=(await e.connect(n)).user.account;return v({authAccount:p,client:n.client,createOptions:t,desiredChain:n.chain})}async function ie(n,t,e){n.authResult&&e.loginWithAuthToken&&await e.loginWithAuthToken(n.authResult);const r=await X(e);if(!r)throw new Error("Failed to authenticate user.");const p=r.account;return v({authAccount:p,client:n.client,createOptions:t,desiredChain:n.chain})}async function Y(n){const{connectSmartAccount:t}=await b(async()=>{const{connectSmartAccount:e}=await import("./index-BPA60hNy.js");return{connectSmartAccount:e}},__vite__mapDeps([2,1,3,4,5,6,7,8,9,10,11,12,13,14]));return t({chain:n.chain,client:n.client,personalAccount:n.authAccount},n.smartAccountOptions)}async function X(n){const t=await n.getUser();switch(t.status){case"Logged In, Wallet Initialized":return t}}async function v(n){const{createOptions:t,authAccount:e,desiredChain:r,client:p}=n;let o,a;const i=t&&"executionMode"in t?t.executionMode:void 0;if(i&&(i.mode==="EIP4337"?o=i.smartAccount:i.mode==="EIP7702"&&(a=i)),t&&"smartAccount"in t&&(t!=null&&t.smartAccount)&&(o=t.smartAccount),o){const[s,y]=await Y({authAccount:e,chain:r,client:p,smartAccountOptions:o});return{account:s,adminAccount:e,chain:y}}if(a){const s=r;if(!s)throw new Error("Chain is required for EIP-7702 execution, pass a chain when connecting the inAppWallet.");return{account:q({adminAccount:e,client:p,sponsorGas:a.sponsorGas}),adminAccount:e,chain:s}}return{account:e,chain:r||H}}export{ie as autoConnectInAppWallet,ae as connectInAppWallet};
