==========================================
步骤 1: 数据库表结构（复制下面的代码）
==========================================

ALTER TABLE bmc_boards 
ADD COLUMN IF NOT EXISTS image_url TEXT;

ALTER TABLE chat_sessions
ADD COLUMN IF NOT EXISTS category TEXT;

CREATE INDEX IF NOT EXISTS idx_chat_sessions_category 
ON chat_sessions(category) 
WHERE category IS NOT NULL;

CREATE OR REPLACE VIEW sessions_by_category AS
SELECT 
  category,
  COUNT(*) as session_count,
  COUNT(DISTINCT user_id) as unique_users,
  AVG(CASE 
    WHEN updated_at > created_at 
    THEN EXTRACT(EPOCH FROM (updated_at - created_at)) 
    ELSE 0 
  END) as avg_duration_seconds
FROM chat_sessions
WHERE category IS NOT NULL
GROUP BY category;

COMMENT ON COLUMN bmc_boards.image_url IS 'Public URL of BMC image stored in Supabase Storage';
COMMENT ON COLUMN chat_sessions.category IS 'Source category from professional services area';

==========================================
步骤 2: 创建 Bucket（通过 Dashboard UI，不需要 SQL）
==========================================

在 Storage 页面点击 "New bucket":
- Name: bmc-images
- Public: ✅ 勾选
- File size limit: 10 MB

==========================================
步骤 3A: 策略 1 - 上传权限
==========================================

CREATE POLICY "Users can upload their own BMC images"
ON storage.objects
FOR INSERT
TO authenticated
WITH CHECK (
  bucket_id = 'bmc-images' 
  AND (storage.foldername(name))[1] = auth.uid()::text
);

==========================================
步骤 3B: 策略 2 - 查看权限
==========================================

CREATE POLICY "Anyone can view BMC images"
ON storage.objects
FOR SELECT
TO public
USING (bucket_id = 'bmc-images');

==========================================
步骤 3C: 策略 3 - 更新权限
==========================================

CREATE POLICY "Users can update their own BMC images"
ON storage.objects
FOR UPDATE
TO authenticated
USING (
  bucket_id = 'bmc-images' 
  AND (storage.foldername(name))[1] = auth.uid()::text
)
WITH CHECK (
  bucket_id = 'bmc-images' 
  AND (storage.foldername(name))[1] = auth.uid()::text
);

==========================================
步骤 3D: 策略 4 - 删除权限
==========================================

CREATE POLICY "Users can delete their own BMC images"
ON storage.objects
FOR DELETE
TO authenticated
USING (
  bucket_id = 'bmc-images' 
  AND (storage.foldername(name))[1] = auth.uid()::text
);

==========================================
验证配置（复制下面的代码验证）
==========================================

-- 检查所有配置
SELECT column_name FROM information_schema.columns WHERE table_name = 'bmc_boards' AND column_name = 'image_url';
SELECT column_name FROM information_schema.columns WHERE table_name = 'chat_sessions' AND column_name = 'category';
SELECT viewname FROM pg_views WHERE viewname = 'sessions_by_category';
SELECT name, public FROM storage.buckets WHERE name = 'bmc-images';
SELECT COUNT(*) as policy_count FROM pg_policies WHERE tablename = 'objects' AND policyname LIKE '%BMC%';

预期结果: 每个查询都应该返回至少 1 行
最后一个查询应该返回: policy_count = 4

